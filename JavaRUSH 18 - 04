package com.javarush.task.task18.task1804;

/* 
Самые редкие байты
*/

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class Solution {
    public static void main(String[] args) throws Exception {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String fileName = reader.readLine();
        FileInputStream file = new FileInputStream(fileName);
        ArrayList<Integer> listOfBytes = new ArrayList<>();
        while (file.available() > 0)
        {
            listOfBytes.add(file.read());
        }
        file.close();

        HashMap<Integer, Integer> map = new HashMap<>();
        initMapBytesCount(listOfBytes, map);
        print(map, getMinCount(map));
    }

    public static void print(HashMap<Integer, Integer> map, int minCount){
        for(Map.Entry<Integer, Integer> pair : map.entrySet() )
        {
            if (pair.getValue() == minCount)
                System.out.print(pair.getKey() + " ");
        }
    }

    public static int getMinCount(HashMap<Integer, Integer> map) {
        int minCount = 1000;
        for(Map.Entry<Integer, Integer> pair : map.entrySet() )
        {
            if (pair.getValue() <= minCount)
                minCount = pair.getValue();
        }
        return minCount;
    }

    public static void initMapBytesCount (ArrayList<Integer> bytes, HashMap<Integer, Integer> map) {
        for (int i = 0; i <= bytes.size()-1; i++){
            int countBytes = 0;
            for (int n = i + 1; n < bytes.size(); n++){
                if (bytes.get(n).equals(bytes.get(i)))
                    countBytes++;
            }
            boolean contain = false;
            for(Map.Entry<Integer, Integer> pair : map.entrySet() )
            {
                if (pair.getKey().equals(bytes.get(i))){
                    contain = true;
                }
            }
            if(!contain){
                map.put(bytes.get(i), countBytes);
            }
        }
    }
}
